import { useParams } from "react-router-dom";
import { useEffect, useState } from "react";
import axios from "axios";
import { MainLayout } from "@/components/layouts/MainLayout";
import { PageWrapper } from "@/components/layouts/PageWrapper";
import { API_ROUTES } from "@/config/apiRoutes";
import { theme } from "@/styles/theme";

export default function VulnerabilityDetails() {
  const { cveId } = useParams();
  const [vuln, setVuln] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios.get(API_ROUTES.VULNERABILITIES.DETAIL(cveId), { withCredentials: true })
      .then((res) => setVuln(res.data))
      .catch((err) => console.error("Error loading CVE detail:", err))
      .finally(() => setLoading(false));
  }, [cveId]);

  if (loading) {
    return (
      <MainLayout>
        <PageWrapper>
          <p style={{ color: theme.colors.muted }}>Cargando detalles de la vulnerabilidad...</p>
        </PageWrapper>
      </MainLayout>
    );
  }

  if (!vuln) {
    return (
      <MainLayout>
        <PageWrapper>
          <p style={{ color: theme.colors.error }}>No se encontró información para {cveId}</p>
        </PageWrapper>
      </MainLayout>
    );
  }

  const {
    cve_id, descripcion, descripcion_en, references = [],
    source_identifier, published, status, cwe = [],
    cvss_version, score, vector, severity,
    exploitability_score, impact_score, user_interaction_required,
    obtain_all_privileges, obtain_user_privileges, obtain_other_privileges,
    attack_vector, attack_complexity, privileges_required,
    user_interaction, scope,
    confidentiality_impact, integrity_impact, availability_impact,
    access_vector, access_complexity, authentication
  } = vuln;

  const finalDescription = descripcion || descripcion_en || "Descripción no disponible.";

  const sectionStyle = {
    backgroundColor: theme.colors.surface,
    border: "1px solid #334155",
    borderRadius: theme.radius.xl,
    padding: "1.5rem",
    boxShadow: theme.shadow.soft,
    marginBottom: "1.5rem"
  };

  const headingStyle = {
    fontSize: "20px",
    fontWeight: "700",
    color: theme.colors.primary,
    marginBottom: "1rem"
  };

  const labelStyle = {
    fontWeight: "600",
    color: theme.colors.text
  };

  const valueStyle = {
    color: theme.colors.muted
  };

  return (
    <MainLayout>
      <PageWrapper>
        <h1 style={{ fontSize: "28px", fontWeight: "800", color: theme.colors.primary, marginBottom: "1rem" }}>{cve_id}</h1>
        <p style={{ marginBottom: "1.5rem", color: theme.colors.muted }}>{finalDescription}</p>

        <section style={sectionStyle}>
          <h2 style={headingStyle}>Referencias</h2>
          <ul style={{ paddingLeft: "1rem", fontSize: "14px", display: "flex", flexDirection: "column", gap: "0.5rem" }}>
            {references.map((r, i) => (
              <li key={i}><a href={r.url} target="_blank" rel="noopener noreferrer" style={{ color: theme.colors.primary, textDecoration: "none" }}>{r.url}</a></li>
            ))}
          </ul>
          <p style={{ fontSize: "12px", marginTop: "0.5rem", fontStyle: "italic", color: theme.colors.muted }}>
            Aquí pueden encontrarse posibles parches o soluciones
          </p>
        </section>

        <section style={sectionStyle}>
          <h2 style={headingStyle}>Información general</h2>
          <div style={{ display: "grid", gridTemplateColumns: "1fr 1fr", gap: "1rem", fontSize: "14px" }}>
            <div><span style={labelStyle}>Identificador fuente:</span> <span style={valueStyle}>{source_identifier}</span></div>
            <div><span style={labelStyle}>Fecha de publicación:</span> <span style={valueStyle}>{published}</span></div>
            <div><span style={labelStyle}>Estado:</span> <span style={valueStyle}>{status}</span></div>
            <div><span style={labelStyle}>CWE asociado:</span> <span style={valueStyle}>{cwe.join(", ") || "N/A"}</span></div>
          </div>
        </section>

        <section style={sectionStyle}>
          <h2 style={headingStyle}>Detalles técnicos</h2>
          <div style={{ display: "grid", gridTemplateColumns: "1fr 1fr", gap: "1rem", fontSize: "13px" }}>
            {[
              ["CVSS Version", cvss_version],
              ["Score", score],
              ["Vector", vector],
              ["Severidad", severity],
              ["Exploitability Score", exploitability_score],
              ["Impact Score", impact_score],
              ["User Interaction Required", user_interaction_required],
              ["Obtain All Privileges", obtain_all_privileges],
              ["Obtain User Privileges", obtain_user_privileges],
              ["Obtain Other Privileges", obtain_other_privileges],
              ["Attack Vector", attack_vector],
              ["Attack Complexity", attack_complexity],
              ["Privileges Required", privileges_required],
              ["User Interaction", user_interaction],
              ["Scope", scope],
              ["Confidentiality Impact", confidentiality_impact],
              ["Integrity Impact", integrity_impact],
              ["Availability Impact", availability_impact],
              ["Access Vector", access_vector],
              ["Access Complexity", access_complexity],
              ["Authentication", authentication]
            ].map(([label, value], i) => (
              <div key={i}><span style={labelStyle}>{label}:</span> <span style={valueStyle}>{value}</span></div>
            ))}
          </div>
        </section>
      </PageWrapper>
    </MainLayout>
  );
}
