import { useParams, useNavigate } from "react-router-dom";
import { useEffect, useState } from "react";
import axios from "axios";
import { MainLayout } from "@/components/layouts/MainLayout";
import { PageWrapper } from "@/components/layouts/PageWrapper";
import { API_ROUTES } from "@/config/apiRoutes";
import { theme } from "@/styles/theme";

export default function VulnerabilityDetails() {
  const { cveId } = useParams();
  const navigate = useNavigate();
  const [vuln, setVuln] = useState(null);
  const [cpes, setCpes] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios
      .get(API_ROUTES.VULNERABILITIES.DETAIL(cveId), { withCredentials: true })
      .then((res) => setVuln(res.data))
      .catch((err) => console.error("Error loading CVE detail:", err))
      .finally(() => setLoading(false));

    axios
      .get(API_ROUTES.VULNERABILITIES.CPES(cveId), { withCredentials: true })
      .then((res) => setCpes(res.data))
      .catch((err) => console.error("Error loading CPEs for CVE:", err));
  }, [cveId]);

  if (loading) {
    return (
      <MainLayout>
        <PageWrapper>
          <p style={{ color: theme.colors.muted }}>Cargando detalles de la vulnerabilidad...</p>
        </PageWrapper>
      </MainLayout>
    );
  }

  if (!vuln) {
    return (
      <MainLayout>
        <PageWrapper>
          <p style={{ color: theme.colors.error }}>No se encontró información para {cveId}</p>
        </PageWrapper>
      </MainLayout>
    );
  }

  const {
    cve_id,
    descripcion,
    descripcion_en,
    references = [],
    source_identifier,
    published,
    status,
    cwe = [],
    cvss_version,
    score,
    vector,
    severity,
    exploitability_score,
    impact_score,
    user_interaction_required,
    obtain_all_privileges,
    obtain_user_privileges,
    obtain_other_privileges,
    attack_vector,
    attack_complexity,
    privileges_required,
    user_interaction,
    scope,
    confidentiality_impact,
    integrity_impact,
    availability_impact,
    access_vector,
    access_complexity,
    authentication,
  } = vuln;

  const finalDescription = descripcion || descripcion_en || "Descripción no disponible.";

  const sectionStyle = {
    backgroundColor: theme.colors.surface,
    border: "1px solid #334155",
    borderRadius: theme.radius.xl,
    padding: "1.5rem",
    boxShadow: theme.shadow.soft,
    marginBottom: "1.5rem",
  };

  const headingStyle = {
    fontSize: "20px",
    fontWeight: "700",
    color: theme.colors.primary,
    marginBottom: "1rem",
  };

  const labelStyle = {
    fontWeight: "600",
    color: theme.colors.text,
  };

  const valueStyle = {
    color: theme.colors.muted,
  };

  return (
    <MainLayout>
      <PageWrapper>
        <div
          style={{
            minHeight: "calc(100vh - 64px)",
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
            padding: "2rem 1rem",
            fontFamily: theme.font.family,
            color: theme.colors.text,
          }}
        >
          <div
            style={{
              display: "flex",
              alignItems: "center",
              justifyContent: "space-between",
              width: "100%",
              maxWidth: "960px",
            }}
          >
            <button
              onClick={() => navigate(-1)}
              style={{
                backgroundColor: "#334155",
                color: "white",
                border: "none",
                borderRadius: "12px",
                padding: "6px 14px",
                fontSize: "1.5rem",
                fontWeight: "bold",
                cursor: "pointer",
                transition: "transform 0.2s ease, box-shadow 0.2s ease",
              }}
              onMouseEnter={(e) => {
                e.currentTarget.style.transform = "scale(1.1)";
                e.currentTarget.style.boxShadow = theme.shadow.medium;
              }}
              onMouseLeave={(e) => {
                e.currentTarget.style.transform = "scale(1)";
                e.currentTarget.style.boxShadow = "none";
              }}
            >
              &lt;
            </button>

            <div style={{ flex: 1, display: "flex", justifyContent: "center", alignItems: "center" }}>
              <h1 style={{ fontSize: "2.5rem", fontWeight: "700", margin: 0 }}>{cve_id}</h1>
            </div>

            <div style={{ width: "52px" }}></div>
          </div>

          <p
            style={{
              fontSize: "1.125rem",
              color: theme.colors.textSecondary || "#94a3b8",
              marginTop: "1rem",
              marginBottom: "3rem",
              textAlign: "center",
              maxWidth: "960px",
            }}
          >
            {finalDescription}
          </p>

          <div style={{ width: "100%", maxWidth: "960px" }}>
            <section style={sectionStyle}>
              <h2 style={headingStyle}>Referencias</h2>
              <ul style={{ paddingLeft: "1rem", fontSize: "14px", display: "flex", flexDirection: "column", gap: "0.5rem" }}>
                {references.map((r, i) => (
                  <li key={i}>
                    <a
                      href={r.url}
                      target="_blank"
                      rel="noopener noreferrer"
                      style={{ color: theme.colors.primary, textDecoration: "none" }}
                    >
                      {r.url}
                    </a>
                  </li>
                ))}
              </ul>
              <p style={{ fontSize: "12px", marginTop: "0.5rem", fontStyle: "italic", color: theme.colors.muted }}>
                Aquí pueden encontrarse posibles parches o soluciones
              </p>
            </section>

            
            <section style={sectionStyle}>
              <h2 style={headingStyle}>Información general</h2>
              <div style={{ display: "grid", gridTemplateColumns: "1fr 1fr", gap: "1rem", fontSize: "14px" }}>
                <div>
                  <span style={labelStyle}>Identificador fuente:</span>{" "}
                  <span style={valueStyle}>{source_identifier}</span>
                </div>
                <div>
                  <span style={labelStyle}>Fecha de publicación:</span>{" "}
                  <span style={valueStyle}>{published}</span>
                </div>
                <div>
                  <span style={labelStyle}>Estado:</span>{" "}
                  <span style={valueStyle}>{status}</span>
                </div>
                <div>
                  <span style={labelStyle}>CWE asociado:</span>{" "}
                  <span style={valueStyle}>
                    {cwe.length > 0 ? (
                      cwe.map((id, idx) => (
                        <span key={id}>
                          <a
                            href={`/weaknesses/${id}`}
                            style={{ color: theme.colors.primary, textDecoration: "none" }}
                          >
                            {id}
                          </a>
                          {idx < cwe.length - 1 && ", "}
                        </span>
                      ))
                    ) : (
                      "N/A"
                    )}
                  </span>
                </div>
              </div>
            </section>

            <section style={sectionStyle}>
              <h2 style={headingStyle}>Detalles técnicos</h2>
              <div style={{ display: "grid", gridTemplateColumns: "1fr 1fr", gap: "1rem", fontSize: "13px" }}>
                {[
                  ["CVSS Version", cvss_version],
                  ["Score", score],
                  ["Vector", vector],
                  ["Severidad", severity],
                  ["Exploitability Score", exploitability_score],
                  ["Impact Score", impact_score],
                  ["User Interaction Required", user_interaction_required],
                  ["Obtain All Privileges", obtain_all_privileges],
                  ["Obtain User Privileges", obtain_user_privileges],
                  ["Obtain Other Privileges", obtain_other_privileges],
                  ["Attack Vector", attack_vector],
                  ["Attack Complexity", attack_complexity],
                  ["Privileges Required", privileges_required],
                  ["User Interaction", user_interaction],
                  ["Scope", scope],
                  ["Confidentiality Impact", confidentiality_impact],
                  ["Integrity Impact", integrity_impact],
                  ["Availability Impact", availability_impact],
                  ["Access Vector", access_vector],
                  ["Access Complexity", access_complexity],
                  ["Authentication", authentication],
                ].map(([label, value], i) => (
                  <div key={i}>
                    <span style={labelStyle}>{label}:</span>{" "}
                    <span style={valueStyle}>{value}</span>
                  </div>
                ))}
              </div>
            </section>

            <section style={sectionStyle}>
              <h2 style={headingStyle}>CPEs afectados</h2>
              {cpes.length > 0 ? (
                <ul style={{ paddingLeft: "1rem", fontSize: "14px", display: "flex", flexDirection: "column", gap: "0.5rem" }}>
                  {cpes.map((cpe, i) => (
                    <li key={i} style={{ color: theme.colors.muted }}>{cpe}</li>
                  ))}
                </ul>
              ) : (
                <p style={{ fontSize: "13px", fontStyle: "italic", color: theme.colors.muted }}>
                  No se encontraron CPEs asociados a esta vulnerabilidad.
                </p>
              )}
            </section>

          </div>
        </div>
      </PageWrapper>
    </MainLayout>
  );
}
