import { useParams, useNavigate } from "react-router-dom";
import { useEffect, useState } from "react";
import axios from "axios";
import { MainLayout } from "@/components/layouts/MainLayout";
import { PageWrapper } from "@/components/layouts/PageWrapper";
import { API_ROUTES } from "@/config/apiRoutes";
import { theme } from "@/styles/theme";
import { useTranslation } from "react-i18next";

export default function VulnerabilityDetails() {
  const { cveId } = useParams();
  const navigate = useNavigate();
  const { t, i18n } = useTranslation();

  // Estados para la vulnerabilidad, lista de CPEs y estado de carga
  const [vuln, setVuln] = useState(null);
  const [cpes, setCpes] = useState([]);
  const [loading, setLoading] = useState(true);

  // Carga datos de la vulnerabilidad y CPEs relacionados
  useEffect(() => {
    axios
      .get(API_ROUTES.VULNERABILITIES.DETAIL(cveId), { withCredentials: true })
      .then((res) => setVuln(res.data))
      .catch((err) => console.error(t("vulnerabilityDetails.error_loading_cve"), err))
      .finally(() => setLoading(false));

    axios
      .get(API_ROUTES.VULNERABILITIES.CPES(cveId), { withCredentials: true })
      .then((res) => setCpes(res.data))
      .catch((err) => console.error(t("vulnerabilityDetails.error_loading_cpes"), err));
  }, [cveId, t]);

  // Mostrar carga mientras se obtienen datos
  if (loading) {
    return (
      <MainLayout>
        <PageWrapper>
          <p style={{ color: theme.colors.muted }}>{t("vulnerabilityDetails.loading")}</p>
        </PageWrapper>
      </MainLayout>
    );
  }

  // Mostrar mensaje si no se encontró la vulnerabilidad
  if (!vuln) {
    return (
      <MainLayout>
        <PageWrapper>
          <p style={{ color: theme.colors.error }}>
            {t("vulnerabilityDetails.not_found", { cveId })}
          </p>
        </PageWrapper>
      </MainLayout>
    );
  }

  // Desestructuramos los campos relevantes de la vulnerabilidad
  const {
    cve_id,
    descripcion,
    descripcion_en,
    references = [],
    source_identifier,
    published,
    status,
    cwe = [],
    cvss_version,
    score,
    vector,
    severity,
    exploitability_score,
    impact_score,
    user_interaction_required,
    obtain_all_privileges,
    obtain_user_privileges,
    obtain_other_privileges,
    attack_vector,
    attack_complexity,
    privileges_required,
    user_interaction,
    scope,
    confidentiality_impact,
    integrity_impact,
    availability_impact,
    access_vector,
    access_complexity,
    authentication,
  } = vuln;

  // Detectamos idioma activo y mostramos descripción acorde
  const lang = i18n.language.toLowerCase();
  const finalDescription =
    lang.startsWith("es")
      ? descripcion || descripcion_en || t("vulnerabilityDetails.no_description")
      : descripcion_en || descripcion || t("vulnerabilityDetails.no_description");

  // Función para formatear fecha YYYY-MM-DD
  const formatDate = (dateStr) => {
    if (!dateStr) return t("vulnerabilityDetails.na");
    const d = new Date(dateStr);
    if (isNaN(d)) return t("vulnerabilityDetails.na");
    // Añadimos ceros a día y mes si es necesario
    const day = String(d.getDate()).padStart(2, "0");
    const month = String(d.getMonth() + 1).padStart(2, "0");
    const year = d.getFullYear();
    return `${day}-${month}-${year}`;
  };

  // Estilos constantes para secciones y textos
  const sectionStyle = {
    backgroundColor: theme.colors.surface,
    border: `1px solid ${theme.colors.border}`,
    borderRadius: theme.radius.xl,
    padding: "1.5rem",
    boxShadow: theme.shadow.soft,
    marginBottom: "1.5rem",
  };

  const headingStyle = {
    fontSize: 20,
    fontWeight: "700",
    color: theme.colors.primary,
    marginBottom: "1rem",
  };

  const labelStyle = {
    fontWeight: "600",
    color: theme.colors.text,
  };

  const valueStyle = {
    color: theme.colors.muted,
  };

  return (
    <MainLayout>
      <PageWrapper>
        <div
          style={{
            minHeight: "calc(100vh - 64px)",
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
            padding: "2rem 1rem",
            fontFamily: theme.font.family,
            color: theme.colors.text,
          }}
        >
          {/* Encabezado con botón atrás y título CVE */}
          <div
            style={{
              display: "flex",
              alignItems: "center",
              justifyContent: "space-between",
              width: "100%",
              maxWidth: 960,
            }}
          >
            <button
              onClick={() => navigate(-1)}
              aria-label={t("vulnerabilityDetails.back_button_aria")}
              style={{
                backgroundColor: "#334155",
                color: "white",
                border: "none",
                borderRadius: 12,
                padding: "6px 14px",
                fontSize: "1.5rem",
                fontWeight: "bold",
                cursor: "pointer",
                transition: "transform 0.2s ease, box-shadow 0.2s ease",
              }}
              onMouseEnter={(e) => {
                e.currentTarget.style.transform = "scale(1.1)";
                e.currentTarget.style.boxShadow = theme.shadow.medium;
              }}
              onMouseLeave={(e) => {
                e.currentTarget.style.transform = "scale(1)";
                e.currentTarget.style.boxShadow = "none";
              }}
            >
              &lt;
            </button>

            <div style={{ flex: 1, display: "flex", justifyContent: "center", alignItems: "center" }}>
              <h1 style={{ fontSize: 32, fontWeight: "700", margin: 0 }}>{cve_id}</h1>
            </div>

            <div style={{ width: 52 }}></div>
          </div>

          {/* Descripción */}
          <p
            style={{
              fontSize: 18,
              color: theme.colors.textSecondary || "#94a3b8",
              marginTop: "1rem",
              marginBottom: "3rem",
              textAlign: "center",
              maxWidth: 960,
            }}
          >
            {finalDescription}
          </p>

          <div style={{ width: "100%", maxWidth: 960 }}>
            {/* Referencias externas */}
            <section style={sectionStyle}>
              <h2 style={headingStyle}>{t("vulnerabilityDetails.references_title")}</h2>
              <ul
                style={{
                  paddingLeft: "1rem",
                  fontSize: 14,
                  display: "flex",
                  flexDirection: "column",
                  gap: "0.5rem",
                }}
              >
                {references.map((r, i) => (
                  <li key={i}>
                    <a
                      href={r.url}
                      target="_blank"
                      rel="noopener noreferrer"
                      style={{ color: theme.colors.primary, textDecoration: "none" }}
                    >
                      {r.url}
                    </a>
                  </li>
                ))}
              </ul>
              <p
                style={{
                  fontSize: 12,
                  marginTop: "0.5rem",
                  fontStyle: "italic",
                  color: theme.colors.muted,
                }}
              >
                {t("vulnerabilityDetails.references_note")}
              </p>
            </section>

            {/* Información general */}
            <section style={sectionStyle}>
              <h2 style={headingStyle}>{t("vulnerabilityDetails.general_info_title")}</h2>
              <div
                style={{
                  display: "grid",
                  gridTemplateColumns: "1fr 1fr",
                  gap: "1rem",
                  fontSize: 14,
                }}
              >
                <div>
                  <span style={labelStyle}>{t("vulnerabilityDetails.source_identifier")}:</span>{" "}
                  <span style={valueStyle}>{source_identifier}</span>
                </div>
                <div>
                  <span style={labelStyle}>{t("vulnerabilityDetails.published_date")}:</span>{" "}
                  <span style={valueStyle}>{formatDate(published)}</span>
                </div>
                <div>
                  <span style={labelStyle}>{t("vulnerabilityDetails.status")}:</span>{" "}
                  <span style={valueStyle}>{status}</span>
                </div>
                <div>
                  <span style={labelStyle}>{t("vulnerabilityDetails.cwe_associated")}:</span>{" "}
                  <span style={valueStyle}>
                    {cwe.length > 0 ? (
                      cwe.map((id, idx) => (
                        <span key={id}>
                          <a
                            href={`/weaknesses/${id}`}
                            style={{ color: theme.colors.primary, textDecoration: "none" }}
                          >
                            {id}
                          </a>
                          {idx < cwe.length - 1 && ", "}
                        </span>
                      ))
                    ) : (
                      t("vulnerabilityDetails.na")
                    )}
                  </span>
                </div>
              </div>
            </section>

            {/* Detalles técnicos */}
            <section style={sectionStyle}>
              <h2 style={headingStyle}>{t("vulnerabilityDetails.technical_details_title")}</h2>
              <div
                style={{
                  display: "grid",
                  gridTemplateColumns: "1fr 1fr",
                  gap: "1rem",
                  fontSize: 13,
                }}
              >
                {[ 
                  [t("vulnerabilityDetails.cvss_version"), cvss_version],
                  [t("vulnerabilityDetails.score"), score],
                  [t("vulnerabilityDetails.vector"), vector],
                  [t("vulnerabilityDetails.severity"), severity],
                  [t("vulnerabilityDetails.exploitability_score"), exploitability_score],
                  [t("vulnerabilityDetails.impact_score"), impact_score],
                  [t("vulnerabilityDetails.user_interaction_required"), user_interaction_required],
                  [t("vulnerabilityDetails.obtain_all_privileges"), obtain_all_privileges],
                  [t("vulnerabilityDetails.obtain_user_privileges"), obtain_user_privileges],
                  [t("vulnerabilityDetails.obtain_other_privileges"), obtain_other_privileges],
                  [t("vulnerabilityDetails.attack_vector"), attack_vector],
                  [t("vulnerabilityDetails.attack_complexity"), attack_complexity],
                  [t("vulnerabilityDetails.privileges_required"), privileges_required],
                  [t("vulnerabilityDetails.user_interaction"), user_interaction],
                  [t("vulnerabilityDetails.scope"), scope],
                  [t("vulnerabilityDetails.confidentiality_impact"), confidentiality_impact],
                  [t("vulnerabilityDetails.integrity_impact"), integrity_impact],
                  [t("vulnerabilityDetails.availability_impact"), availability_impact],
                  [t("vulnerabilityDetails.access_vector"), access_vector],
                  [t("vulnerabilityDetails.access_complexity"), access_complexity],
                  [t("vulnerabilityDetails.authentication"), authentication],
                ].map(([label, value], i) => (
                  <div key={i}>
                    <span style={labelStyle}>{label}:</span>{" "}
                    <span style={valueStyle}>{value ?? t("vulnerabilityDetails.na")}</span>
                  </div>
                ))}
              </div>
            </section>

            {/* CPEs afectados */}
            <section style={sectionStyle}>
              <h2 style={headingStyle}>{t("vulnerabilityDetails.affected_cpes_title")}</h2>
              {cpes.length > 0 ? (
                <ul
                  style={{
                    paddingLeft: "1rem",
                    fontSize: 14,
                    display: "flex",
                    flexDirection: "column",
                    gap: "0.5rem",
                    color: theme.colors.muted,
                  }}
                >
                  {cpes.map((cpe, i) => (
                    <li key={i}>{cpe}</li>
                  ))}
                </ul>
              ) : (
                <p
                  style={{
                    fontSize: 13,
                    fontStyle: "italic",
                    color: theme.colors.muted,
                  }}
                >
                  {t("vulnerabilityDetails.no_cpes")}
                </p>
              )}
            </section>
          </div>
        </div>
      </PageWrapper>
    </MainLayout>
  );
}
